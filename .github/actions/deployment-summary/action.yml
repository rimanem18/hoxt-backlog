name: 'Deployment Summary'
description: 'Generate comprehensive deployment summary with URLs and metadata for easy access'

inputs:
  environment-type:
    description: 'Environment type (production or preview)'
    required: true
  lambda-function-url:
    description: 'Lambda function URL'
    required: false
  cloudflare-deployment-url:
    description: 'CloudFlare Pages deployment URL'
    required: false
  lambda-version:
    description: 'Deployed Lambda version'
    required: false
  terraform-outputs:
    description: 'JSON string of Terraform outputs'
    required: false
  commit-sha:
    description: 'Git commit SHA'
    required: false
    default: ${{ github.sha }}
  branch-name:
    description: 'Git branch name'
    required: false
    default: ${{ github.ref_name }}

runs:
  using: 'composite'
  steps:
    - name: Generate Deployment Summary
      shell: bash
      env:
        INPUT_ENV_TYPE: ${{ inputs.environment-type }}
        INPUT_COMMIT_SHA: ${{ inputs.commit-sha }}
        INPUT_BRANCH_NAME: ${{ inputs.branch-name }}
        INPUT_LAMBDA_URL: ${{ inputs.lambda-function-url }}
        INPUT_LAMBDA_VERSION: ${{ inputs.lambda-version }}
        INPUT_TERRAFORM_OUTPUTS: ${{ inputs.terraform-outputs }}
        GITHUB_ACTOR: ${{ github.actor }}
        GITHUB_SERVER_URL: ${{ github.server_url }}
        GITHUB_REPOSITORY: ${{ github.repository }}
        GITHUB_RUN_ID: ${{ github.run_id }}
      run: |
        # デプロイサマリーファイルを作成
        SUMMARY_FILE="deployment-summary-$(date +%Y%m%d-%H%M%S).md"
        CURRENT_TIMESTAMP=$(date -u '+%Y-%m-%d %H:%M:%S UTC')

        # マークダウン形式でサマリーを生成
        cat > "$SUMMARY_FILE" << EOF
        # 🚀 Deployment Summary

        ## 📋 Basic Information
        - **Environment**: $INPUT_ENV_TYPE
        - **Commit**: $INPUT_COMMIT_SHA
        - **Branch**: $INPUT_BRANCH_NAME
        - **Timestamp**: $CURRENT_TIMESTAMP
        - **Actor**: $GITHUB_ACTOR

        ## 🌐 Deployment URLs
        EOF

        # Lambda URL情報を追加
        if [ -n "$INPUT_LAMBDA_URL" ]; then
          echo "- **🔗 API Endpoint**: $INPUT_LAMBDA_URL" >> "$SUMMARY_FILE"
        fi

        # Lambda バージョン情報を追加
        if [ -n "$INPUT_LAMBDA_VERSION" ]; then
          echo "" >> "$SUMMARY_FILE"
          echo "## ⚙️ Technical Details" >> "$SUMMARY_FILE"
          echo "- **Lambda Version**: $INPUT_LAMBDA_VERSION" >> "$SUMMARY_FILE"
        fi

        # Terraform出力情報を追加
        if [ -n "$INPUT_TERRAFORM_OUTPUTS" ]; then
          echo "- **Infrastructure**: Updated via Terraform" >> "$SUMMARY_FILE"
        fi

        # GitHub Actionsサマリーに表示
        echo "## 🎯 $INPUT_ENV_TYPE Deployment Completed Successfully!" >> "$GITHUB_STEP_SUMMARY"
        echo "" >> "$GITHUB_STEP_SUMMARY"
        cat "$SUMMARY_FILE" >> "$GITHUB_STEP_SUMMARY"

        # 追加の便利情報
        echo "" >> "$GITHUB_STEP_SUMMARY"
        echo "## 🔧 Quick Actions" >> "$GITHUB_STEP_SUMMARY"

        if [ -n "$INPUT_LAMBDA_URL" ]; then
          echo "- [🧪 Test API Endpoint](${INPUT_LAMBDA_URL}/health)" >> "$GITHUB_STEP_SUMMARY"
        fi

        echo "- [📊 View Deployment Logs](${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID})" >> "$GITHUB_STEP_SUMMARY"

        echo "✅ Deployment summary generated: $SUMMARY_FILE"

    - name: Upload Deployment Summary
      uses: actions/upload-artifact@v4
      with:
        name: deployment-summary-${{ inputs.environment-type }}-${{ github.run_id }}
        path: deployment-summary-*.md
        retention-days: 90
