name: CI

on:
  pull_request:
    branches:
      - main

jobs:
  # Client (Next.js) のユニット/結合テスト
  client-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./app/client
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-client-${{ hashFiles('app/client/bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-bun-client-

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run lint and type check
        run: bun run check

      - name: Run tests
        run: bun test

  # Server (Hono) のユニット/結合テスト
  server-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./app/server
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-server-${{ hashFiles('app/server/bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-bun-server-

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run lint and type check
        run: bun run check

      - name: Run tests
        run: bun test

  # E2E (Playwright) テスト
  e2e-test:
    runs-on: ubuntu-latest
    needs: [client-test, server-test]
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    container:
      image: mcr.microsoft.com/playwright:v1.55.0-jammy
      env:
        # Database connection
        DATABASE_URL: "postgresql://postgres:test_password@postgres:5432/postgres"
        DB_HOST: postgres
        DB_PORT: 5432
        DB_NAME: postgres
        DB_USER: postgres
        DB_PASSWORD: test_password
        DB_TABLE_PREFIX: test_
        # Application ports
        SERVER_PORT: 3001
        CLIENT_PORT: 3000
        # E2E test configuration
        NEXT_PUBLIC_API_BASE_URL: "http://localhost:3001/api"
        
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Cache Playwright dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/ms-playwright
            **/playwright/.cache
          key: ${{ runner.os }}-playwright-${{ hashFiles('app/client/bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install and start server and client
        env:
          # Client用の環境変数
          CLIENT_PORT: 3000
          NEXT_PUBLIC_API_BASE_URL: "http://localhost:3001/api"
          # Server用の環境変数  
          SERVER_PORT: 3001
        run: |
          set -e

          echo "--- Installing server dependencies ---"
          cd ./app/server
          bun install --frozen-lockfile

          echo "--- Starting server in background ---"
          bun run start &
          SERVER_PID=$!
          
          echo "--- Installing client dependencies ---"
          cd ../client
          bun install --frozen-lockfile

          echo "--- Starting client in background ---"
          bun run dev &
          CLIENT_PID=$!

          echo "--- Installing wait-on globally ---"
          npm install -g wait-on

          echo "--- Waiting for services to be ready ---"
          wait-on http://localhost:3000 http://localhost:3001 -t 60000

          echo "--- Running Playwright tests ---"
          bun run test:e2e

          # Cleanup background processes
          kill $SERVER_PID $CLIENT_PID || true

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: app/client/playwright-report/
          retention-days: 30