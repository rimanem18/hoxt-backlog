name: Deploy Backend

on:
  workflow_call:
    inputs:
      lambda-function-name:
        description: 'Lambda function name for deployment'
        required: true
        type: string
      environment-type:
        description: 'Environment type (production or preview)'
        required: false
        type: string
        default: 'production'
      aws-region:
        description: 'AWS region for deployment'
        required: false
        type: string
        default: 'ap-northeast-1'
      cors-allow-origin:
        description: 'CORS allow origin setting'
        required: true
        type: string
    outputs:
      deployed-version:
        description: 'Deployed Lambda version'
        value: ${{ jobs.deploy-backend.outputs.deployed-version }}

jobs:
  deploy-backend:
    name: Deploy Backend Application
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    outputs:
      deployed-version: ${{ steps.lambda-package.outputs.deployed-version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun Workspace
        uses: ./.github/actions/setup-bun-workspace
        with:
          working-directory: './app/server'
          cache-key-suffix: 'backend'

      - name: Build Backend Application
        working-directory: ./app/server
        env:
          # データベーススキーマ設定（環境別）
          BASE_SCHEMA: ${{ inputs.environment-type == 'production' && format('app_{0}', vars.PROJECT_NAME) || format('app_{0}_preview', vars.PROJECT_NAME) }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          # CORS設定
          ACCESS_ALLOW_ORIGIN: ${{ inputs.cors-allow-origin }}
          ACCESS_ALLOW_METHODS: ${{ vars.ACCESS_ALLOW_METHODS }}
          ACCESS_ALLOW_HEADERS: ${{ vars.ACCESS_ALLOW_HEADERS }}
          # JWT検証設定（本番環境）
          USE_JWKS_VERIFIER: 'true'
          ENABLE_JWKS_VERIFICATION: 'true'
          ENABLE_HS256_FALLBACK: 'false'
        run: bun run build:lambda

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_ROLE_ARN }}
          role-session-name: GitHubActions-Backend-Deploy
          aws-region: ${{ inputs.aws-region }}

      - name: Package and Deploy Lambda
        id: lambda-package
        uses: ./.github/actions/lambda-package
        with:
          working-directory: './app/server'
          function-name: ${{ inputs.lambda-function-name }}
          aws-region: ${{ inputs.aws-region }}