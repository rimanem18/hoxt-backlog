name: Security Scanning

on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened]
  push:
    branches:
      - main
  workflow_dispatch:

# Fork PRからの実行を制限（セキュリティ対策）
permissions:
  contents: read
  pull-requests: write  # スキャン結果コメント用

concurrency:
  group: security-scan-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Fork制限チェック
  fork-check:
    name: Fork Repository Check
    runs-on: ubuntu-latest
    outputs:
      is-fork: ${{ steps.fork.outputs.is-fork }}
      can-scan: ${{ steps.fork.outputs.can-proceed }}
    steps:
      - name: Determine checkout ref for fork safety
        id: checkout_ref
        shell: bash
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            IS_FORK="${{ github.event.pull_request.head.repo.full_name != github.repository }}"
            if [ "$IS_FORK" = "true" ]; then
              # Fork PR: main ブランチを使用（改ざん対策）
              echo "ref=${{ github.event.pull_request.base.sha }}" >> $GITHUB_OUTPUT
              echo "📌 Fork PR detected: using base branch for security"
            else
              # 同一リポジトリ PR: マージコミットを使用（実際のPR挙動を再現）
              echo "ref=${{ github.sha }}" >> $GITHUB_OUTPUT
              echo "📌 Same-repo PR: using merge commit"
            fi
          else
            # push/workflow_dispatch: 現在のコミット（実際のマージ挙動を再現）
            echo "ref=${{ github.sha }}" >> $GITHUB_OUTPUT
            echo "📌 Non-PR event: using current commit"
          fi

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.checkout_ref.outputs.ref }}
          persist-credentials: false

      - name: Check Fork Status
        id: fork
        uses: ./.github/actions/fork-check

  # TruffleHog Secret Scanning
  trufflehog:
    name: TruffleHog Secret Scan
    needs: fork-check
    if: needs.fork-check.outputs.can-scan == 'true'
    runs-on: ubuntu-latest
    outputs:
      severity: ${{ steps.scan.outputs.severity }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Git履歴全スキャンのため全履歴取得

      - name: Run TruffleHog Scan
        id: scan
        uses: ./.github/actions/trufflehog-scan
        with:
          base-branch: ${{ github.event.repository.default_branch }}

      - name: Check Critical Findings
        if: steps.scan.outputs.severity == 'critical'
        run: |
          echo "❌ Critical: 検証済みシークレットが検出されました"
          exit 1

  # Semgrep SAST
  semgrep:
    name: Semgrep SAST Scan
    needs: fork-check
    if: needs.fork-check.outputs.can-scan == 'true'
    runs-on: ubuntu-latest
    outputs:
      severity: ${{ steps.scan.outputs.severity }}
      high_critical_count: ${{ steps.scan.outputs.high_critical_count }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Semgrep Scan
        id: scan
        uses: ./.github/actions/semgrep-scan

      - name: Check Critical Findings
        if: steps.scan.outputs.severity == 'critical'
        run: |
          echo "❌ Critical: High/Critical の脆弱性が ${HIGH_CRITICAL_COUNT} 件検出されました"
          exit 1
        env:
          HIGH_CRITICAL_COUNT: ${{ steps.scan.outputs.high_critical_count }}

  # スキャン結果サマリー
  security-summary:
    name: Security Scan Summary
    needs: [fork-check, trufflehog, semgrep]
    if: always() && needs.fork-check.outputs.can-scan == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Generate Summary
        run: |
          echo "## 🔒 セキュリティスキャン結果サマリー" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # TruffleHog結果
          echo "### 🔑 TruffleHog Secret Scanning" >> $GITHUB_STEP_SUMMARY
          if [ "${{ needs.trufflehog.result }}" = "success" ]; then
            echo "✅ 検証済みシークレットは検出されませんでした" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ 検証済みシークレットが検出されました" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY

          # Semgrep結果
          echo "### 🛡️ Semgrep SAST" >> $GITHUB_STEP_SUMMARY
          if [ "${{ needs.semgrep.result }}" = "success" ]; then
            echo "✅ Critical/High の脆弱性は検出されませんでした" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Critical/High の脆弱性が検出されました" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY

          # 総合判定
          echo "### 📋 総合判定" >> $GITHUB_STEP_SUMMARY
          if [ "${{ needs.trufflehog.result }}" = "success" ] && [ "${{ needs.semgrep.result }}" = "success" ]; then
            echo "✅ セキュリティスキャンに合格しました" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ セキュリティスキャンに不合格です。上記の検出項目を修正してください" >> $GITHUB_STEP_SUMMARY
          fi

  # Fork警告コメント
  comment-fork-warning:
    name: Comment Fork Warning
    needs: fork-check
    if: needs.fork-check.outputs.can-scan == 'false'
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Comment Fork Warning
        uses: actions/github-script@v7
        with:
          script: |
            const forkWarning = `## ⚠️ セキュリティスキャンスキップ

            このプルリクエストはフォークリポジトリから作成されています。セキュリティ上の理由により、以下のスキャンはスキップされました：

            ### 🔒 スキップされたスキャン
            - 🔑 TruffleHog Secret Scanning
            - 🛡️ Semgrep SAST

            ### 📝 対応方法
            - コードレビュー時に手動でセキュリティチェックを実施します
            - マージ後に本番環境へのデプロイ前に自動スキャンが実行されます

            ご協力ありがとうございます！ 🙏`;

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: forkWarning,
            });
