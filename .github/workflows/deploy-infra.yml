name: Deploy Infrastructure

on:
  workflow_call:
    inputs:
      terraform-version:
        description: 'Terraform version to use'
        required: false
        type: string
        default: '1.6.0'
      aws-region:
        description: 'AWS region for deployment'
        required: false
        type: string
        default: 'ap-northeast-1'
    outputs:
      has-destructive-changes:
        description: 'Whether destructive changes were detected'
        value: ${{ jobs.terraform.outputs.has-destructive-changes }}
      lambda-function-name-production:
        description: 'Production Lambda function name'
        value: ${{ jobs.terraform.outputs.lambda-function-name-production }}
      lambda-function-name-preview:
        description: 'Preview Lambda function name'
        value: ${{ jobs.terraform.outputs.lambda-function-name-preview }}
      lambda-function-url-production:
        description: 'Production Lambda function URL'
        value: ${{ jobs.terraform.outputs.lambda-function-url-production }}
      access-allow-origin-production:
        description: 'Production CORS allow origin'
        value: ${{ jobs.terraform.outputs.access-allow-origin-production }}
      access-allow-origin-preview:
        description: 'Preview CORS allow origin'
        value: ${{ jobs.terraform.outputs.access-allow-origin-preview }}
      next-public-api-base-url-production:
        description: 'Production API base URL'
        value: ${{ jobs.terraform.outputs.next-public-api-base-url-production }}
      next-public-site-url-production:
        description: 'Production site URL'
        value: ${{ jobs.terraform.outputs.next-public-site-url-production }}
      next-public-trusted-domains-production:
        description: 'Production trusted domains'
        value: ${{ jobs.terraform.outputs.next-public-trusted-domains-production }}
      next-public-api-base-url-preview:
        description: 'Preview API base URL'
        value: ${{ jobs.terraform.outputs.next-public-api-base-url-preview }}
      next-public-site-url-preview:
        description: 'Preview site URL'
        value: ${{ jobs.terraform.outputs.next-public-site-url-preview }}
      next-public-trusted-domains-preview:
        description: 'Preview trusted domains'
        value: ${{ jobs.terraform.outputs.next-public-trusted-domains-preview }}
      terraform-outputs:
        description: 'JSON string of all Terraform outputs'
        value: ${{ jobs.terraform.outputs.terraform-outputs }}

jobs:
  terraform:
    name: Deploy Infrastructure
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    
    outputs:
      has-destructive-changes: ${{ steps.terraform-ops.outputs.has-destructive-changes }}
      lambda-function-name-production: ${{ steps.terraform-ops.outputs.lambda_function_name_production }}
      lambda-function-name-preview: ${{ steps.terraform-ops.outputs.lambda_function_name_preview }}
      lambda-function-url-production: ${{ steps.terraform-ops.outputs.lambda_function_url_production }}
      access-allow-origin-production: ${{ steps.terraform-ops.outputs.access-allow-origin-production }}
      access-allow-origin-preview: ${{ steps.terraform-ops.outputs.access-allow-origin-preview }}
      next-public-api-base-url-production: ${{ steps.terraform-ops.outputs.next-public-api-base-url-production }}
      next-public-site-url-production: ${{ steps.terraform-ops.outputs.next-public-site-url-production }}
      next-public-trusted-domains-production: ${{ steps.terraform-ops.outputs.next-public-trusted-domains-production }}
      next-public-api-base-url-preview: ${{ steps.terraform-ops.outputs.next-public-api-base-url-preview }}
      next-public-site-url-preview: ${{ steps.terraform-ops.outputs.next-public-site-url-preview }}
      next-public-trusted-domains-preview: ${{ steps.terraform-ops.outputs.next-public-trusted-domains-preview }}
      terraform-outputs: ${{ steps.terraform-ops.outputs.terraform-outputs }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_ROLE_ARN }}
          role-session-name: GitHubActions-Infrastructure-Deploy
          aws-region: ${{ inputs.aws-region }}

      - name: Deploy Infrastructure
        id: terraform-ops
        uses: ./.github/actions/terraform-ops
        with:
          working-directory: './terraform/app'
          terraform-version: ${{ inputs.terraform-version }}
          backend-bucket: ${{ vars.TERRAFORM_STATE_BUCKET }}
          backend-key: 'app/terraform.tfstate'
          backend-region: ${{ inputs.aws-region }}
          dynamodb-table: ${{ vars.TERRAFORM_LOCKS_TABLE }}
        env:
          TF_VAR_repository_name: ${{ github.repository }}
          TF_VAR_project_name: ${{ vars.PROJECT_NAME }}
          TF_VAR_domain_name: ${{ vars.DOMAIN_NAME }}
          TF_VAR_database_url: ${{ secrets.DATABASE_URL }}