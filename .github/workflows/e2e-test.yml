name: E2E Test

on:
  workflow_call:

permissions:
  contents: read

jobs:
  e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres -d postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    concurrency:
      group: e2e-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build E2E Docker image with cache
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/e2e/Dockerfile
          # イメージをビルドし、ローカルのDockerデーモンにロードする
          load: true
          # レジストリにはプッシュしない
          push: false
          # 後続のステップで参照するためのタグ
          tags: playwright-e2e:latest
          # GitHub Actionsキャッシュバックエンドでレイヤーをキャッシュ
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run Playwright E2E tests in Docker container
        run: |
          # Docker networkを作成してPostgreSQLサービスにアクセス
          docker network create e2e-network || true
          
          # PostgreSQLコンテナをネットワークに接続
          POSTGRES_CONTAINER=$(docker ps -q --filter "ancestor=postgres:15-alpine")
          docker network connect e2e-network $POSTGRES_CONTAINER
          
          # E2Eテストをキャッシュされたイメージで実行
          docker run --rm --shm-size=1gb \
            --network e2e-network \
            -e CI=true \
            -e HOME=/root \
            -e GITHUB_ACTIONS=true \
            -e CLIENT_PORT=3000 \
            -e SERVER_PORT=3001 \
            -e NEXT_PUBLIC_API_BASE_URL=http://localhost:3001/api \
            -e NEXT_PUBLIC_SUPABASE_URL=http://localhost:54321 \
            -e NEXT_PUBLIC_SUPABASE_ANON_KEY=test_anon_key \
            -e NEXT_PUBLIC_TRUSTED_DOMAINS=localhost:3000,localhost:3001 \
            -e NEXT_PUBLIC_SITE_URL=http://localhost:3000 \
            -e DB_HOST=$POSTGRES_CONTAINER \
            -e DB_PORT=5432 \
            -e DB_NAME=postgres \
            -e DB_USER=postgres \
            -e DB_PASSWORD=test_password \
            -e DATABASE_URL=postgresql://postgres:test_password@$POSTGRES_CONTAINER:5432/postgres \
            playwright-e2e:latest

      - name: Extract test reports from container
        if: always()
        run: |
          # テストレポートをコンテナから抽出
          docker create --name temp-container playwright-e2e:latest
          docker cp temp-container:/app/client/playwright-report ./playwright-report || echo "No report found"
          docker rm temp-container

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30